!!!
%head
  %meta{ :charset => 'utf-8' }
  = style_sheet
  - if enable_search
    <link href='https://fonts.googleapis.com/css?family=Droid+Sans' rel='stylesheet' type='text/css'>
    <link rel="stylesheet" href="https://www.google.com/cse/style/look/default.css" type="text/css" />
  <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <link rel="stylesheet" type="text/css" href="public/inqlude.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
  <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

%body

  .container-fluid.header

    .col-md-8.logo    
      %h1
        %span.logo><
          \#in
        %span.logo.green><
          q
        %span.logo><
          lude
      %h2
        %span.subtitle
          The Qt library archive

    .col-md-4.search  
      - if enable_search
        %gcse:searchbox-only{ resultsUrl: "https://inqlude.org/search.html" }
          Loading...
    %br{ :clear => "all" }

  .container-fluid.content

    .col-sm-3.side-bar

      .col-sm-12.description
        %p
          Inqlude provides a comprehensive listing of all existing libraries for developers of applications using the Qt toolkit. Inqlude is run by the community and open for contributions. 
      
        %ul
          %li
            = link_to "About", "about"
          %li
            = link_to "How to get libraries", "get"
          %li
            = link_to "How to contribute", "contribute"            
            
      .col-sm-12.latest-releases
        .col-sm-12.title
          Latest releases 
        .col-sm-12.latest-releases-content
          %table
            %tr
              %td
                - latest_libraries.each do |library|
                  - if library.latest_manifest.display_name
                    = link_to_library(library.latest_manifest.name, library.latest_manifest.display_name)
                  - else
                    = link_to_library(library.latest_manifest.name, library.latest_manifest.name)
                  %date
                    = '(' + library.latest_manifest.release_date + ')'
                  %br                
        
      .col-sm-12.filters
        .col-sm-12.title
          Filters 
        .col-sm-12.filters-content
          .col-sm-7.filter-topics
            %h6
              Topics
            - topics.each do |topic|
              %input{:type=>"checkbox", :id=>"#{topic}", :onclick=>"filter(this)"}
              / , :onclick => "= click_topic #{topic}"
              = topic            
              %br     

          .col-sm-5.filter-platforms
            %h6
              Platforms
            - platforms.each do |platform|
              %input{:type=>"checkbox", :id=>"#{platform}", :onclick=>"filter(this)"}
              = platform
              %br     
        
          .col-sm-5.filter-licenses
            %h6
              Licenses
            - licenses.each do |license|
              %input{:type=>"checkbox", :id=>"#{license}", :onclick=>"filter(this)"}
              = license
              %br     

    .col-sm-9.main-pane 
      = yank

      %br{ :clear => "all" }

  .col-sm-12.legal
    Inqlude is a
    = link_to "KDE project", "http://kde.org"
    = "|"
    = link_to "Legal", "http://www.kde.org/community/whatiskde/impressum.php"

  - if enable_search
    :javascript
      (function() {
        var cx = '012526638842992167133:g7thmrlp2uw';
        var gcse = document.createElement('script');
        gcse.type = 'text/javascript';
        gcse.async = true;
        gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
            '//cse.google.com/cse.js?cx=' + cx;
        var s = document.getElementsByTagName('script')[0];
        s.parentNode.insertBefore(gcse, s);
      })();

:javascript
  var licenseList = ['Apache','BSD','Commercial','GPL','LGPL','MIT','Qwt'];
  var platforms = ['Android','iOS','Linux','OS_x','Windows'];
  var elem = $('.topics');
  for(i=0;i<elem.length;i++){
     var el = elem[i];
     var txt = el.textContent.split(',');
     for(j=0;j<txt.length;j++){
        if(txt[j].trim()){
          (el.parentNode).classList.add(txt[j].trim());
        }
     }
  }
  var elem = $('.platforms');
  for(i=0;i<elem.length;i++){
    var el = elem[i];
    var html = el.innerHTML;
    for(var k=platforms.length-1; k>=0; k--){
      if(html.indexOf(platforms[k])>=0){
        (el.parentNode).classList.add(platforms[k]);
      }
    }
  }
  var elem = $('.licenses');
  for(i=0;i<elem.length;i++){
     var el = elem[i];
     var txt = el.textContent.split(',');
     for(j=0;j<txt.length;j++){
        if(txt[j].trim()){
          var license;
          for(var k=licenseList.length-1; k>=0; k--){
            if(txt[j].trim().indexOf(licenseList[k])>=0){
               license = licenseList[k];
               break;
            }
          }
          if(license){
            (el.parentNode).classList.add(license);
          }
        }
     }
  }
  function filter(check) {
    var id = check.id;
    if(id==='OS x'){
       id = 'OS_x';
    }
    var value = check.checked;
    if(value){
      $('.main tr:not(.hidden):not(.'+id+')').addClass('hidden');
    }else{
      var selected = $('.filters-content input:checked');
      var selector = "tr";
      for(var i=selected.length-1; i>=0 ; i--){
        selector += '.'+ selected[i].id;
      }
      $(selector).removeClass('hidden');
    }
  }

  var selected_d = $('.filters-content input:checked');
  var selector_d = ".main tr";
  for(var i=selected_d.length-1; i>=0 ; i--){
    selector_d += ':not(.'+ selected_d[i].id+')';
  }
  if(selector_d !== '.main tr'){
      $(selector_d).addClass('hidden');
  }

